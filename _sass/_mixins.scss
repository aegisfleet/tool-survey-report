// Responsive breakpoints
@mixin media-breakpoint-up($name) {
  $min: map-get($breakpoints, $name);
  @if $min != 0 {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name) {
  $max: map-get($breakpoints, $name) - 0.02;
  @media (max-width: $max) {
    @content;
  }
}

@mixin media-breakpoint-between($lower, $upper) {
  $min: map-get($breakpoints, $lower);
  $max: map-get($breakpoints, $upper) - 0.02;
  
  @if $min != 0 and $max != 0 {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == 0 {
    @include media-breakpoint-up($lower) {
      @content;
    }
  } @else if $min == 0 {
    @include media-breakpoint-down($upper) {
      @content;
    }
  }
}

// Container
@mixin make-container($gutter: $spacer) {
  width: 100%;
  padding-right: $gutter * 0.5;
  padding-left: $gutter * 0.5;
  margin-right: auto;
  margin-left: auto;
}

@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-break {
  word-wrap: break-word !important;
  word-break: break-word !important;
}

// Screen reader only
@mixin sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Button reset
@mixin button-reset {
  padding: 0;
  border: none;
  background: none;
  cursor: pointer;
  font: inherit;
  color: inherit;
  text-decoration: none;
  outline: none;
  
  &:focus {
    outline: 2px solid $secondary-color;
    outline-offset: 2px;
  }
}

// List reset
@mixin list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

// Link reset
@mixin link-reset {
  color: inherit;
  text-decoration: none;
  
  &:hover,
  &:focus {
    color: inherit;
    text-decoration: none;
  }
}

// Focus styles
@mixin focus-ring($color: $secondary-color) {
  outline: 2px solid $color;
  outline-offset: 2px;
}

// Card component
@mixin card($padding: map-get($spacers, 4)) {
  background: $content-bg;
  border: 1px solid $border-color;
  border-radius: $border-radius;
  box-shadow: $box-shadow-sm;
  padding: $padding;
}

// Hover effects
@mixin hover-lift {
  transition: $transition-base;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $box-shadow;
  }
}

// Gradient text
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Clearfix
@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}